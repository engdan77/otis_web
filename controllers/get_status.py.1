# coding: utf8
if auth.user is None:
    redirect(URL('default', 'user', args='login',
    vars=dict(_next=URL(args=request.args, vars=request.vars))))
    
def user(): return dict(form=auth())

# @auth.requires_permission('read', secrets)
# @auth.requires(auth.user_id==1 or request.client=='127.0.0.1', requires_login=True)
# @auth.requires_login()

def get_all_sensors():
    items = db_AH((db_AH.device.device_id == db_AH.device_attr.device_id) & (db_AH.device_attr.attr_id == db_AH.attribute.attr_id)).select(db_AH.device.device_id, db_AH.device_attr.attr_id, db_AH.device.location, db_AH.device.name, db_AH.attribute.name)
    myset = []
    all_set = []
    for row in items:
        values = '%s,%s' % (row.device.device_id, row.device_attr.attr_id)
        item = '%s-%s-%s' % (row.device.location, row.device.name, row.attribute.name)
        myset.append((values, item))
        all_set.append(values)
    # myset = [ ('1,2,3', 'Sensor1'), ('4,5,6', 'Sensor2'), ('7,8,9', 'Sensor3') ]
    # form = SQLFORM.factory(Field('Sensors', type='boolean', requires=IS_IN_SET([1,2,3], multiple=True), widget=SQLFORM.widgets.checkboxes.widget, default = [2,3]), formstyle='divs')
    form = SQLFORM.factory(Field('Sensors', type='boolean', requires=IS_IN_SET(myset, multiple=True), widget=SQLFORM.widgets.checkboxes.widget, default = all_set), formstyle='divs')

    
    # form=SQLFORM.factory(*[Field('%s' % item.device_id) for item in items])
    return items

def index():
    status_all = db_AH((db_AH.device.device_id == db_AH.device_attr.device_id) & (db_AH.device_attr.attr_id == db_AH.attribute.attr_id)).select(db_AH.device.location, db_AH.device.name, db_AH.attribute.name, db_AH.device_attr.data, db_AH.device_attr.updated)

    if len(request.vars) > 0:
        graphs = FORM('startDate', INPUT(_class='date', _name='startDate', widget=SQLFORM.widgets.date.widget, requires=IS_DATE(format=T('%Y-%m-%d'), error_message='must be YYYY-MM-DD!')), 'endDate', INPUT(_class='date', _name='endDate', widget=SQLFORM.widgets.date.widget, requires=IS_DATE(format=T('%Y-%m-%d'), error_message='must be YYYY-MM-DD!')), door_select, INPUT(_type='submit'))
        if form.accepts(request, session):
            response.flash = 'Form Accepted'
        elif form.errors:
            response.flash = 'Retry'
        else:
            response.flash = 'Please fill in form'
        
    return dict(result=SQLTABLE(status_all, headers={'device.location': T('Location'), 'device.name': T('Name'), 'attribute.name': T('Sensor Name'), 'device_attr.data': T('Value'), 'device_attr.updated': T('Last Updated')}), checkboxes=get_all_sensors())
